#############################################################################
# Makefile for building: libValidatorPlugin.so
# Generated by qmake (2.01a) (Qt 4.7.2) on: Mon Nov 14 12:07:36 2011
# Project:  validator.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile validator.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_PLUGIN -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Iinclude -I/usr/local/include/composer -I/usr/local/include/composer/core -I/usr/local/include/composer/core/extensions -I/usr/lib -I.moc
LINK          = g++
LFLAGS        = -Wl,--rpath='$$ORIGIN' --rpath='$$ORIGIN/../' --rpath='$$ORIGIN/../lib/composer' --rpath='$$ORIGIN/../lib/composer/extensions' -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/local/lib/composer -L/usr/local/lib/composer/extensions -lNCLLanguageProfile -lre2 -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = ValidatorPlugin.cpp \
		ValidatorFactory.cpp \
		langstruct/langstruct.cpp \
		langstruct/components/ReferenceStructure.cpp \
		langstruct/components/ElementStructure.cpp \
		langstruct/components/AttributeStructure.cpp \
		message/message.cpp \
		nclmodel/nclmodel.cpp \
		validation/Validator.cpp \
		composerncladapter.cpp \
		validation/semanticvalidation.cpp \
		validation/structuralvalidation.cpp .moc/moc_ValidatorPlugin.cpp \
		.moc/moc_ValidatorFactory.cpp \
		qrc_Resource.cpp
OBJECTS       = .obj/ValidatorPlugin.o \
		.obj/ValidatorFactory.o \
		.obj/langstruct.o \
		.obj/ReferenceStructure.o \
		.obj/ElementStructure.o \
		.obj/AttributeStructure.o \
		.obj/message.o \
		.obj/nclmodel.o \
		.obj/Validator.o \
		.obj/composerncladapter.o \
		.obj/semanticvalidation.o \
		.obj/structuralvalidation.o \
		.obj/moc_ValidatorPlugin.o \
		.obj/moc_ValidatorFactory.o \
		.obj/qrc_Resource.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../plugins-common.pri \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		validator.pro
QMAKE_TARGET  = ValidatorPlugin
DESTDIR       = 
TARGET        = libValidatorPlugin.so
TARGETD       = libValidatorPlugin.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)



Makefile: validator.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../plugins-common.pri \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile validator.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
../plugins-common.pri:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile validator.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/ValidatorPlugin1.0.0 || $(MKDIR) .obj/ValidatorPlugin1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/ValidatorPlugin1.0.0/ && $(COPY_FILE) --parents ValidatorPlugin.h ValidatorFactory.h definitions/definitions.h langstruct/langstruct.h langstruct/components/ReferenceStructure.h langstruct/components/ElementStructure.h langstruct/components/AttributeStructure.h message/message.h nclmodel/nclmodel.h validation/Validator.h composerncladapter.h validation/semanticvalidation.h validation/structuralvalidation.h .obj/ValidatorPlugin1.0.0/ && $(COPY_FILE) --parents Resource.qrc .obj/ValidatorPlugin1.0.0/ && $(COPY_FILE) --parents ValidatorPlugin.cpp ValidatorFactory.cpp langstruct/langstruct.cpp langstruct/components/ReferenceStructure.cpp langstruct/components/ElementStructure.cpp langstruct/components/AttributeStructure.cpp message/message.cpp nclmodel/nclmodel.cpp validation/Validator.cpp composerncladapter.cpp validation/semanticvalidation.cpp validation/structuralvalidation.cpp .obj/ValidatorPlugin1.0.0/ && (cd `dirname .obj/ValidatorPlugin1.0.0` && $(TAR) ValidatorPlugin1.0.0.tar ValidatorPlugin1.0.0 && $(COMPRESS) ValidatorPlugin1.0.0.tar) && $(MOVE) `dirname .obj/ValidatorPlugin1.0.0`/ValidatorPlugin1.0.0.tar.gz . && $(DEL_FILE) -r .obj/ValidatorPlugin1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: .moc/moc_ValidatorPlugin.cpp .moc/moc_ValidatorFactory.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) .moc/moc_ValidatorPlugin.cpp .moc/moc_ValidatorFactory.cpp
.moc/moc_ValidatorPlugin.cpp: nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		validation/Validator.h \
		message/message.h \
		composerncladapter.h \
		ValidatorPlugin.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ValidatorPlugin.h -o .moc/moc_ValidatorPlugin.cpp

.moc/moc_ValidatorFactory.cpp: validation/Validator.h \
		nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		message/message.h \
		ValidatorPlugin.h \
		composerncladapter.h \
		ValidatorFactory.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ValidatorFactory.h -o .moc/moc_ValidatorFactory.cpp

compiler_rcc_make_all: qrc_Resource.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_Resource.cpp
qrc_Resource.cpp: Resource.qrc \
		langstruct.in \
		en_messages.txt \
		EDTV_Definition.txt
	/usr/bin/rcc -name Resource Resource.qrc -o qrc_Resource.cpp

compiler_image_collection_make_all: .ui/qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) .ui/qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

.obj/ValidatorPlugin.o: ValidatorPlugin.cpp ValidatorPlugin.h \
		nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		validation/Validator.h \
		message/message.h \
		composerncladapter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ValidatorPlugin.o ValidatorPlugin.cpp

.obj/ValidatorFactory.o: ValidatorFactory.cpp ValidatorFactory.h \
		validation/Validator.h \
		nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		message/message.h \
		ValidatorPlugin.h \
		composerncladapter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ValidatorFactory.o ValidatorFactory.cpp

.obj/langstruct.o: langstruct/langstruct.cpp langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/langstruct.o langstruct/langstruct.cpp

.obj/ReferenceStructure.o: langstruct/components/ReferenceStructure.cpp langstruct/components/ReferenceStructure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ReferenceStructure.o langstruct/components/ReferenceStructure.cpp

.obj/ElementStructure.o: langstruct/components/ElementStructure.cpp langstruct/components/ElementStructure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ElementStructure.o langstruct/components/ElementStructure.cpp

.obj/AttributeStructure.o: langstruct/components/AttributeStructure.cpp langstruct/components/AttributeStructure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/AttributeStructure.o langstruct/components/AttributeStructure.cpp

.obj/message.o: message/message.cpp message/message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/message.o message/message.cpp

.obj/nclmodel.o: nclmodel/nclmodel.cpp nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/nclmodel.o nclmodel/nclmodel.cpp

.obj/Validator.o: validation/Validator.cpp validation/Validator.h \
		nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		message/message.h \
		validation/semanticvalidation.h \
		validation/structuralvalidation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Validator.o validation/Validator.cpp

.obj/composerncladapter.o: composerncladapter.cpp composerncladapter.h \
		message/message.h \
		nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		validation/Validator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/composerncladapter.o composerncladapter.cpp

.obj/semanticvalidation.o: validation/semanticvalidation.cpp validation/semanticvalidation.h \
		nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		message/message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/semanticvalidation.o validation/semanticvalidation.cpp

.obj/structuralvalidation.o: validation/structuralvalidation.cpp validation/structuralvalidation.h \
		nclmodel/nclmodel.h \
		definitions/definitions.h \
		langstruct/langstruct.h \
		langstruct/components/ElementStructure.h \
		langstruct/components/AttributeStructure.h \
		langstruct/components/ReferenceStructure.h \
		message/message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/structuralvalidation.o validation/structuralvalidation.cpp

.obj/moc_ValidatorPlugin.o: .moc/moc_ValidatorPlugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_ValidatorPlugin.o .moc/moc_ValidatorPlugin.cpp

.obj/moc_ValidatorFactory.o: .moc/moc_ValidatorFactory.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_ValidatorFactory.o .moc/moc_ValidatorFactory.cpp

.obj/qrc_Resource.o: qrc_Resource.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qrc_Resource.o qrc_Resource.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/lib/composer/extensions/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/lib/composer/extensions/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/composer/extensions/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/composer/extensions/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local/lib/composer/extensions/ 


install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/lib/composer/extensions/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/lib/composer/extensions/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/composer/extensions/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/composer/extensions/$(TARGET)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/composer/extensions/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local/lib/composer/extensions/ 


install:  install_target install_target  FORCE

uninstall: uninstall_target uninstall_target   FORCE

FORCE:

