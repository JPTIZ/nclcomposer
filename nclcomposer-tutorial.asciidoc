[[sec:tutorial]]
Tutorial
--------
Este tutorial é o ponto de partida para os interessados em desenvolver
aplicações para TV Digital usando o
http://composer.telemidia.puc-rio.br[{nclcomposer}].

Baseado nos exemplos apresentados no Capítulo 3 do livro 
http://www.telemidia.puc-rio.br[Programando em NCL 3.0], este tutorial traz uma
introdução passo a passo de como utilizar o {nclcomposer} para o 
desenvolvimento de aplicações interativas usando a NCL 3.0 para TV digital.

Alguns conhecimentos são necessários para prosseguir:

	* Básico em Informática.
	* http://www.ncl.org.br[Linguagem NCL 3.0 (Nested Context Language)] (pode ser
  	estudada junto com o tutorial).

Exemplos:

	* Exemplo 0: <<sample:00, Olá Garrincha!>>
	* Exemplo 1: <<sample:01, Sincronismo sem interatividade>>
	* Exemplo 2: Sincronismo com interatividade
	* Exempl0 3: Contextos
	* Exemplo 4: Reúso de Objetos de Mídia
	* Exemplo 5: Canal de Interatividade
	* Exemplo 6: Múltiplos dispositivos
	* Exemplo 7: Adaptação de Conteúdo
	* Exemplo 8: Nó Settings
	* Exemplo 9: Efeitos de Transição e Animação
	* Exemplo 10: Navegação por teclas
	* Exemplo 11: Objetos NCLua

[NOTE]
****
Neste tutorial, não existe a preocupação nem de definir a linguagem NCL
completamente e nem de apresentar todas as funcionalidades do {nclcomposer}. Os
exemplos são desenvolvidos seguindo o que os autores acreditam que seja a
forma mais prática de utilização da ferramenta.

Para uma referência completa sobre a linguagem NCL, recomendamos:

  * O livro Programando em NCL 3.0 <<Soares2012>> (português); ou
  * o http://handbook.ncl.org.br[NCL Handbook] (inglês).

Para uma referência completa sobre o {nclcomposer}, é possível consultar o:

  * http://composer.telemidia.puc-rio.br[{nclcomposer} User Manual] (inglês).

Sempre que necessário, no entanto, no decorrer deste tutorial, é possível
encontrar ponteiros para partes específicas do http://handbook.ncl.org.br[NCL
Handbook] ou para o http://composer.telemidia.puc-rio.br[{nclcomposer} User
Manual] onde o leitor pode encontrar mais informações.
****

Assim como no Capítulo 3 do Livro Programando em NCL, para introduzir a
programação em NCL usando o {nclcomposer}, iremos utilizar um único exemplo,
que será construído passo a passo: _O Primeiro João_.

_O Primeiro João_ é baseado em um vídeo, uma animação de mesmo nome
produzida por André Castelão, que por sua vez foi baseado nas crônicas de 
Mané Garrincha, escritas por Gerson Soares. 

NOTE: Uma descrição completa da animação _O Primeiro João_ pode ser encontrada
em: <<Soares2012>>.

[[sample:00]]
Exemplo 1: Olá Garrincha!
~~~~~~~~~~~~~~~~~~~~~~~~~
Objetivo
^^^^^^^^
Neste primeiro exemplo, o objetivo é apenas exibir o vídeo da animação em tela
cheia.

Passo 0: Criando um novo projeto
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Para isso, vamos abrir o {nclcomposer}, que apresenta a seguinte tela de
boas-vindas:

image::images/nclcomposer-welcomescreen.png[title="Tela de boas-vindas do {nclcomposer}.",width="35%",link="images/nclcomposer-welcomescreen.png"]

Nessa tela de boas-vindas podemos criar o nosso primeiro projeto. Para isso,
pressione o botão _New Project_ no canto esquerdo inferior da tela de
boas-vindas. A seguinte tela será exibida:

TIP: Outra possibilidade para criar um novo projeto é através do menu
_File->New Project_.

image::images/nclcomposer-newproject.png[title="Criação de um novo projeto.",width="35%"]

Nessa janela, atribua um nome para o projeto que você está criando, selecione
o diretório onde deseja salvá-lo e também marque a opção _Copy and Import the
default Connector Base_. 

NOTE: Nas próximas seções serão discutidos em detalhes o que são os conectores
e também as bases de conectores. Por enquanto, apenas marque esta opção,
pois ela será útil para os próximos exemplos que iremos desenvolver.

Feito isso, pressione o botão _Finish_ e a seguinte tela será apresentada:

image::images/nclcomposer-body.png[title="Visão estrutural de um projeto recém-criado.",width="35%"]

Com o nosso projeto criado, podemos ter acesso às visões que já vem instaladas
por default no {nclcomposer}: {default_views}.

Como é possível observar, quando criamos um novo projeto, o {nclcomposer}
automaticamente já o cria com o cabeçalho e o corpo da aplicação.

Se você for para a visão _Textual_ poderá ver o código XML do documento que já
foi gerado por padrão: 

[source,xml]
-------------------------------------------
<?xml version="1.0" encoding="ISO-8859-1"?>
<ncl id="myNCLDocID" xmlns="http://www.ncl.org.br/NCL3.0/EDTVProfile">
  <head>
    <connectorBase id="connBaseId">
      <importBase alias="conn" documentURI="defaultConnBase.ncl"/>
    </connectorBase>
  </head>
  <body id="myBodyID"/>
</ncl>
-------------------------------------------

//.Para saber mais: eXtensible Markup Language
//********************************************
//Alguns pontos que você deve saber sobre XML são:
//
//  * XML significa _EXtensible Markup Language_.
//	* XML é uma linguagem textual para descrição de dados.
//	* XML é uma recomendação W3C.
//
//**Tags, elements, and attributes**
//
//Existem três termos comumente utilizados para descrever partes de um documento
//XML: tags, elementos e atributos. Segue um exemplo que ilustra tais termos:
//
//--------
//<address>
//  <name>
//    <title>Mrs.</title>
//    <first-name>
//      Mary
//    </first-name>
//    <last-name>
//      McGoon
//    </last-name>
//  </name>
//  <street>
//    1401 Main Street
//  </street>
//  <city state="NC">Anytown</city>
//  <postal-code>
//    34829
//  </postal-code>
//</address>
//---------
//
//Uma **tag** é o texto entre os símbolos "<", à esquerda, e ">", à direita. Existem
//tags de início (como <name>) e tags de final (</name).
//
//Um **elemento** é composto por uma tag de início, uma tag de final e tudo entre
//essas. No exemplo acima, o elemento <name> contém três elementos-filhos: <title>,
//<first-name> e <last-name>.
//
//Um atributo é par nome-valor dentro de uma tag de início de um elemento. No
//exemplo acima, state é um atributo do elemento <city> element.
//
//	* Um documento XML é um documento textual composto por um conjunto de
//	* elementos aninhados.
//	* As tags XML não são predefinidas. Cada aplicação XML define as suas
//	  próprias tags.
//	* NCL é um exemplo de aplicação XML que define suas próprias
//		tags (<ncl>, <head>, <body>, <media>, ...).
//
//********************************************
//
//.Para saber mais: Estrutura do documento NCL
//************************************************
//Um documento NCL é um arquivo escrito em XML. Todo documento NCL possui a
//seguinte estrutura:
//
//  * uma seção de prólogo, definindo a codificação do arquivo.
//	* um cabeçalho de arquivo NCL (<ncl>).
//	* uma seção de cabeçalho, onde são definidos os elementos que serão
//	  reutilizados no corpo (<head>).
//	* o corpo do programa, (<body>), onde são definidos os diversos objetos de
//	  mídia (<media) e como eles se relacionam.
//	* pelo menos uma porta que indica onde o programa começa a ser exibido.
//	  (<port>).
//	* a conclusão do documento.
//
//TODO: Figura com o esqueleto de um documento NCL.
//************************************************
//
Passo 1: Adicionando um objeto de mídia
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Para inserir os nossos objetos de mídia, a forma mais simples é apenas
arrastar os objetos de mídia do seu Gerenciador de Arquivos para dentro da
{structural_view} do {nclcomposer}.

image::images/nclcomposer-drag_and_drop_animGar.png[title="Arraste os objetos de mídia do seu gerenciador de arquivos para a {structural_view} do {nclcomposer} para inserí-lo como objetos de mídia da aplicação.", width="35%"]

TIP: Outra forma de inserir um objeto de mídia, na {structural_view} é 
clicar com o botão direito sobre o corpo do documento e selecionar o menu 
_Insert -> Media_. Neste caso, é importante não esquecer de definir o caminho 
para o objeto de mídia, o que poder ser realizado selecionando o objeto que 
você acabou de editar e alterando o valor do atributo _src_ (ou na _Visão de
Propriedades_ ou na _Visão Textual_).

//.Para saber mais: Objetos de Mídia
//************************************************
//TODO
//************************************************
//

Passo 2: Definindo propriedades do objeto de mídia
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Para finalizar o nosso exemplo inicial _Alô Garrincha_ só falta agora
definirmos onde esse vídeo da animação será exibido. A forma mais simples de
definir as dimensões do objeto de mídia, é por meio de propriedades.

Para inserirmos propriedades nos objetos de mídia por meio da _Visão
Estrutural_ a forma mais direta é clicando com o botão direto do mouse sobre o
objeto de mídia no qual queremos inserir uma nova propriedade e selecionando o
menu _Insert->Property_.

image::images/nclcomposer-addproperty.png[title="Adicionando propriedade à um objeto de mídia.", width="35%"]

Neste nosso primeiro exemplo estamos especialmente interessados nas
propriedades que definem a dimensão dos objetos: _top_, _left_, _width_ e
_height_.

Para editar a propriedade inserirmos anteriormente é suficiente a
selecionarmos pela {structural_view} e, depois, a partir da visão de
propriedades podemos definir o seu nome e seu valor. No caso do nosso 
exemplo, devemos definir a propriedade _width_ e o valor 100%:

image::images/nclcomposer-property-width.png[title="Definindo largura do objeto de mídia.", width="35%"]

Da mesma forma, deve-se  criar uma propriedade _height_, também com o valor 
de 100%. Definindo assim, que nossa mídia irá ocupar toda a tela quando 
for apresentada.

Passo 3: Informando o(s) objeto(s) de mídia que serão inicialmente exibidos
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Para informar que o objeto de mídia que acabamos de inserir deve iniciar
quanto a nossa aplicação multimídia iniciar, é suficiente criarmos uma porta
no corpo do documento, mapeando-a para o objeto de mídia.

Para inserirmos uma porta no corpo do documento pela _Visão
Estrutural_ é suficiente clicarmos com o botão direito sobre o corpo e
selecionarmos o menu _Insert->Port_.

image::images/nclcomposer-addport.png[title="Adicionando porta.", width="35%"]

*FIXME*: Esta figura deveria ter as duas propriedades definidas no passo
anterior.

Para mapearmos a porta que acabamos de criar para o objeto de mídia, devemos, 
segurando a tecla _SHIFT_, clicar sobre a porta e arrastar o ponteiro
do mouse para o objeto de mídia.  

image::images/nclcomposer-portcomponent.png[title="Mapeando porta para objeto de mídia.", width="35%"]

*FIXME*: Esta figura deveria ter as duas propriedades definidas no passo
anterior.

Com isso, já definimos que nossa aplicação é constituída apenas do objeto de
mídia _animGar_ e que quando a aplicação começar, o primeiro objeto de mídia a
ser apresentado será o vídeo da animação _O Primeiro João_. 

Passo 4: Executar o exemplo desenvolvido
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Dado que o NCL Composer está devidamente configurado (link para o anexo que
explica como configurar) com o player NCL de sua escolha, basta executar a
aplicação por meio do "Run NCL Project"

*TODO*: Imagem do botão.

A seguinte tela exemplifica o exemplo em execução:

*TODO*: Imagem rodando o Exemplo 1.

//.Para saber mais: Propriedades dos Objetos de Mídia
//***************************************************
//TODO
//***************************************************

Exemplo 2: Sincronismo de Mídia sem Interatividade
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Objetivo
^^^^^^^^
O próximo exemplo ilustra como é possível introduzir vários objetos de
mídia sincronizados no tempo. Para isso, vamos começar a partir do projeto que
desenvolvemos no <<sample:00, exemplo anterior>> e vamos acrescentar:

  1. uma música de fundo (um chorinho), que deverá começar assim que terminar a
apresentação inicial do vídeo e começar a animação propriamente dita;
  2. um outro objeto de vídeo, que deverá ser exibido em paralelo e sincronizado
com o famoso “drible do vaivém” do Mané, retratado na animação; e ainda
  3. uma outra imagem, uma foto, que deverá ser exibida junto com a cena do
marcador caído no chão.

A imagem a seguir apresenta a visão temporal deste exemplo:

image::images/temporal-view.png[title="Visão temporal do exemplo 02.",width="35%"]

Passo 1: Salvar como projeto anterior
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Para mantermos o exemplo anterior, vamos abrí-lo e "Salvar como..."  

Reúso Apenas de Relação
^^^^^^^^^^^^^^^^^^^^^^^
TODO

Reúso de Características de Apresentação e Importação de Base
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO

Exemplo 3: Sincronismo com Interatividade
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 4: Contextos
~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 5: Reúso de Objetos de Mídia
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 6: Canal de Interatividade
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 7: Múltiplos Dispositivos de Exibição
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 8: Adaptação de Conteúdo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 9: Nó Settings
~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 10: Efeitos de Transição e Animação
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 11: Navegação por Teclas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

Exemplo 12: Objetos NCLua
~~~~~~~~~~~~~~~~~~~~~~~~~
TODO

