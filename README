NCL Composer
============
This project is intended to group all NCL Composer related suprojects using 
the git submodules feature. This project does not contain any source code, it 
just uses the abstraction of git submodules to link to git projects where the 
code of each individual NCL Composer's project is available.

Additionally, this project also brings some useful files and scripts related to
code documentation, like Doxyfile, scripts to add the License HEAD to files,
packaging features and so on.

Today, there are three main submodules inside this project:
  * composer-core
  * composer-gui
  * composer-plugins

If you want specific information about one of the above subproject go to its
specfic README file.

Getting Submodules Source Code
==============================
Prerequisites:
 * Git 1.7.x or superior
    Probably you already had git, once you get this project.
 * Qt 4.7.1
     The Qt SDK provides you with most of the required software.

The easier way to get the all submodules projects required is running:
  $ qmake

in the root directory of this projects. The first time you run qmake, it will
initialize and update the submodules, getting all the necessary source code for
compile NCL Composer. By default, every submodule will be checkouted to branch
master.

Otherwise, if you want to do it for yourself you can execute the following 
commands:
  $ git submodule init
  $ git submodule update
  $ git submodule foreach "git checkout master"

Changing and Committing the code 
================================
Even put together in the same root directory, each git project is totally 
independent. So, each change, commit and push must be realized individually to
each submodules.

If you need more information about git submodule these links can be useful:
  - http://kernel.org/pub/software/scm/git/docs/git-submodule.html
  - https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial

Packaging
=========
One of the most important feature of the composer-all project is packaging.

* Generating MSI (Windwows installer) package
  //TODO

* Generating DEBIAN package
Before generate the debian package you must update the debian files, inside the
debian directory.

To generate a new debian package, the only thing you need to do is run:
  $ debuild -us -uc
in your terminal.


//TODO: LICENSE

